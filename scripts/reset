#!/bin/bash

################################################################################
#
# This script will reset a local copy of the capacity4more distribution.
#
# Do not change the content of this file, 
# all configuration variables are in the config.sh file.
#
################################################################################


# Define the root of the GIT repository
cd ${0%/*}
ROOT=$(git rev-parse --show-toplevel)
cd $ROOT

# Load the colors
source $ROOT/scripts/helper-colors.sh

# Load the helpers
source $ROOT/scripts/helper-functions.sh


##
# Function to explain the script arguments.
##
function arguments_usage {
  USAGE=$(fill_string_spaces "Usage: $0 [options]" 61)
  echo
  echo -e  "${BGCYAN}                                                                 ${RESTORE}"
  echo -e "${BGLCYAN}  Reset capacity4more                                            ${RESTORE}"
  echo -e  "${BGCYAN}  This will reset the installation back to a clean installation  ${RESTORE}"
  echo -e  "${BGCYAN}  of the capacity4more profile.                                  ${RESTORE}"
  echo -e  "${BGCYAN}                                                                 ${RESTORE}"
  echo -e  "${BGCYAN}  $USAGE  ${RESTORE}"
  echo -e  "${BGCYAN}                                                                 ${RESTORE}"
  echo -e  "${BGCYAN}  OPTIONS:                                                       ${RESTORE}"
  echo -e  "${BGCYAN}    -h   Show this message                                       ${RESTORE}"
  echo -e  "${BGCYAN}    -d   Load demo content after the reset                       ${RESTORE}"
  echo -e  "${BGCYAN}                                                                 ${RESTORE}"
  echo
}

# Check and process arguments.
# See http://rsalveti.wordpress.com/2007/04/03/bash-parsing-arguments-with-getopts/
while getopts "hd" OPTION
do
  case $OPTION in
    h)
      arguments_usage
      exit 1
      ;;
    d)
      DEMO_CONTENT=1
      ;;
    ?)
      arguments_usage
      exit
      ;;
  esac
done


# Load the configuration
load_config_file


# Check if we have a working Drupal bootstrap
cd $ROOT/www
BOOTSTRAP_SUCCESS=`drush status grep "Drupal bootstrap" | grep "Successful"`
cd $ROOT

if [ ! "$BOOTSTRAP_SUCCESS" ]; then
  echo
  echo -e  "${BGRED}                                                                 ${RESTORE}"
  echo -e "${BGLRED}  No working Drupal installation!                                ${RESTORE}"
  echo -e  "${BGRED}  > Drupal Bootstrap could not complete successfully.            ${RESTORE}"
  echo -e  "${BGRED}  > An update can only be run on a working environment.          ${RESTORE}"
  echo -e  "${BGRED}                                                                 ${RESTORE}"
  echo -e  "${BGRED}  Run the ${BGLRED}./install${BGRED} command to install the platform.             ${RESTORE}"
  echo -e  "${BGRED}                                                                 ${RESTORE}"
  echo
  exit 1
fi




# Always ask confirmation before destroying the Database & Files!
echo 
echo -e  "${BGBLUE}                                                                 ${RESTORE}"
echo -e "${BGLBLUE}  Reset capacity4more                                            ${RESTORE}"
echo -e  "${BGBLUE}                                                                 ${RESTORE}"
echo -e  "${BGBLUE}  > This will delete the database and the files directory.       ${RESTORE}"
echo -e  "${BGBLUE}  > This will install the capacity4more profile.                 ${RESTORE}"
echo -e  "${BGBLUE}  > Drupal core, contrib modules & themes will not be replaced.  ${RESTORE}"
if [ $DEMO_CONTENT ]; then
  echo -e  "${BGBLUE}                                                                 ${RESTORE}"
  echo -e  "${BGBLUE}  > Demo content will be loaded into the platform.               ${RESTORE}"
fi
echo -e  "${BGBLUE}                                                                 ${RESTORE}"
echo

echo -e -n "${LRED}Are you sure?${RESTORE} (Y/n) "
read -e -n 1 -r
if [[ ! $REPLY =~ ^[Y]$ ]]; then
  echo 
  echo -e  "${BGYELLOW}                                                                 ${RESTORE}"
  echo -e "${BGLYELLOW}  Reset aborted!                                                 ${RESTORE}"
  echo -e  "${BGYELLOW}                                                                 ${RESTORE}"
  echo
  exit 0
fi
echo



# Cleanup the www/sites/default directory
delete_sites_default_content


# Install the capacity4more profile
install_drupal_profile


# Setup the files directory
create_sites_default_files_directory


# Enable the development modules
enable_development_modules

# Load demo content if requested
if [ $DEMO_CONTENT ]; then
  migrate_dummy_content
fi



# Check if we have a working bootstrap
cd $ROOT/www
BOOTSTRAP_SUCCESS=`drush status grep "Drupal bootstrap" | grep "Successful"`
cd $ROOT

if [ ! "$BOOTSTRAP_SUCCESS" ]; then
  echo
  echo -e  "${BGRED}                                                                 ${RESTORE}"
  echo -e "${BGLRED}  Reset failure!                                                 ${RESTORE}"
  echo -e  "${BGRED}  > Drupal Bootstrap could not complete successfully             ${RESTORE}"
  echo -e  "${BGRED}                                                                 ${RESTORE}"
  echo
  exit 1
fi


# If we managed to get to here, the reset was a success
echo
echo -e  "${BGGREEN}                                                                 ${RESTORE}"
echo -e "${BGLGREEN}  Reset complete!                                                ${RESTORE}"
echo -e  "${BGGREEN}  > Visit the site : ${BGLGREEN}capacity4more.dev${BGGREEN}                           ${RESTORE}"
echo -e  "${BGGREEN}                                                                 ${RESTORE}"
echo

exit 0
