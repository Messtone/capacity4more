<?php
/**
 * @file
 * Code for the People overview feature.
 */

include_once 'c4m_features_og_members.features.inc';

/**
 * Implements hook_menu().
 */
function c4m_features_og_members_menu() {
  $items['members/promote/%user'] = array(
    'title' => 'Promote to group administrator',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('c4m_features_og_members_promote', 2),
    'access callback' => 'c4m_features_og_members_access_group',
    'access arguments' => array('manage members'),
    'file' => 'c4m_features_og_members.admin.inc',
  );
  $items['members/demote/%user'] = array(
    'title' => 'Demote to normal group member',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('c4m_features_og_members_demote', 2),
    'access callback' => 'c4m_features_og_members_access_group',
    'access arguments' => array('manage members'),
    'file' => 'c4m_features_og_members.admin.inc',
  );
  $items['members/remove/%user'] = array(
    'title' => 'Remove from group',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('c4m_features_og_members_remove', 2),
    'access callback' => 'c4m_features_og_members_access_group',
    'access arguments' => array('manage members'),
    'file' => 'c4m_features_og_members.admin.inc',
  );

  return $items;
}

/**
 * Menu access; Check if there is a group context and user has permission to it.
 *
 * @param      $perm
 */
function c4m_features_og_members_access_group($perm) {
  $group = c4m_og_current_group();

  if (!$group) {
    return FALSE;
  }

  // Re-use built-in og user access checks.
  return og_ui_user_access_group($perm, 'node', $group->nid);
}