<?php

/**
 * Implements hook_field_widget_WIDGET_TYPE_form_alter().
 *
 * Make all select fields use Select2.
 */
function gizra_select_field_widget_options_select_form_alter(&$element, &$form_state, $context) {
  $element += array(
    '#after_build' => array('gizra_select_select2_widget_after_build'),
    '#cardinality' => $context['field']['cardinality'],
    '#attached' => array(
      'css' => array(
        libraries_get_path('select2') . '/select2.css',
        drupal_get_path('module', 'gizra_select') . '/css/select2-widget.css',
      ),
      'js' => array(
        libraries_get_path('select2') . '/select2.min.js',
        drupal_get_path('module', 'gizra_select') . '/js/select2-widget.js',
      ),
    ),
  );



  // Handle special characters correctly.
  foreach ($element['#options'] as $key => $option) {
    $element['#options'][$key] = html_entity_decode($option, ENT_QUOTES);
  }

  if ($element['#cardinality'] != 1) {
    // Multiple select, remove the "None" option.
    unset($element['#options']['_none']);
  }

  return $element;
}

/**
 * After build callback; Add required JS settings to Select2 fields.
 */
function gizra_select_select2_widget_after_build($element, &$form_state) {
  // Remove bootstrap classes.
  $element['#attributes']['class'] = array();

  // There may be more than one Select2 field and each of them gets to this
  // function separately and should be added to the existing array of elements
  // saved in a drupal JS setting.
  // The problem is we cannot modify an existing drupal JS setting, we can only
  // override it. The solution is saving the array of elements as static, and
  // then overriding the JS setting according to it.
  $setting = drupal_static(__FUNCTION__, array());

  $setting[] = array(
    'selector' => '#' . $element['#id'],
    'cardinality' => $element['#cardinality'],
  );

  drupal_add_js(array('select2_widget' => $setting), 'setting');

  return $element;
}
