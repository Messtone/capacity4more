<?php
/**
 * @file
 * Code for the Quick Post feature.
 */

/**
 * Implements hook_ctools_plugin_directory().
 */
function c4m_restful_quick_post_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_theme().
 */
function c4m_restful_quick_post_theme() {
  $theme['c4m_restful_quick_post_angular_form'] = array(
    'template' => 'quick-post-form',
    'path' => drupal_get_path('module', 'c4m_restful_quick_post') . '/templates',
    'variables' => array(
      'show_resources' => NULL,
    ),
  );

  return $theme;
}

/**
 * Page callback; Load the AngularJs form.
 *
 * @param int $group_id
 *   The node ID of the current group.
 * @param array $show_resources
 *   Array with the resources name that should appear. Defaults to all
 *   resources.
 * @param bool $full_form
 *   Determine if full form should be used. This is checked only when a single
 *   $show_resources is passed.
 * @param stdClass $node
 *   (optional) The node object to edit using the form.
 *
 * @return string
 *   A rendered form of the Quick Post.
 */
function c4m_restful_quick_post_form($group_id, $show_resources = array(), $full_form = FALSE, $node = NULL) {
  $resources = array(
    'discussions' => array(
      'bundle' => 'Discussion',
      'description' => 'Add a Discussion',
    ),
    'documents' => array(
      'bundle' => 'Document',
      'description' => 'Upload a Document',
    ),
    'events' => array(
      'bundle' => 'Event',
      'description' => 'Add an Event',
    ),
  );

  $resources_names = !empty($show_resources) ? array_keys($show_resources) : array_keys($resources);
  $show_resources = !empty($show_resources)? $show_resources : $resources;
  $bower_path = libraries_get_path('bower_components');

  // Get fields.
  $field_schema = array();
  $public_fields = array();
  foreach ($resources_names as $resource_name) {
    $handler = restful_get_restful_handler($resource_name);
    $field_schema += $handler->options();
    $public_fields += $handler->getPublicFields();
    // Send the fields as separate objects as well (for validation on submit.)
    $field_schema['resources'][$resource_name] = $handler->options();
  }

  // Load the libraries.
  drupal_add_js($bower_path . '/danialfarid-angular-file-upload/dist/angular-file-upload-shim.min.js');
  drupal_add_js($bower_path . '/angular/angular.js');
  drupal_add_js($bower_path . '/danialfarid-angular-file-upload/dist/angular-file-upload.min.js');

  // JSON pretty print library.
  drupal_add_js($bower_path . '/ng-prettyjson/dist/ng-prettyjson.min.js');
  drupal_add_css($bower_path . '/ng-prettyjson/dist/ng-prettyjson.min.css');

  // TextAngular library.
  drupal_add_css($bower_path . '/textAngular/src/textAngular.css');
  drupal_add_js($bower_path . '/textAngular/dist/textAngular-rangy.min.js');
  drupal_add_js($bower_path . '/textAngular/dist/textAngular-sanitize.min.js');
  drupal_add_js($bower_path . '/textAngular/dist/textAngular.min.js');

  // Select UI
  drupal_add_css($bower_path . '/select2/select2.css');
  drupal_add_css($bower_path . '/select2/select2-bootstrap.css');
  drupal_add_js($bower_path . '/select2/select2.js');
  drupal_add_js($bower_path . '/angular-ui-select2/src/select2.js');

  // Bootstrap DatePicker.
  drupal_add_js($bower_path . '/angular-bootstrap/ui-bootstrap.min.js');
  drupal_add_js($bower_path . '/angular-bootstrap/ui-bootstrap-tpls.min.js');

  // Font-awesome library.
  drupal_add_css($bower_path . '/components-font-awesome/css/font-awesome.min.css');

  // Load our custom app.
  $app_path = $bower_path . '/c4m-app/dist';
  drupal_add_js($app_path . '/c4m-app.js');
  drupal_add_css($app_path . '/css/c4m-app.css');

  // Gathering all the fields to pass to the angular-app.
  $entity_fields = array();
  $skipped_fields = array(
    'id',
    'self',
  );
  foreach($public_fields as $public_field_name => $value) {
    // Skipped fields.
    if (in_array($public_field_name, $skipped_fields)) {
      continue;
    }

    // Set all fields values to NULL.
    $entity_fields[$public_field_name] = NULL;

    // Set the current Group.
    if ($public_field_name == 'group') {
      $entity_fields[$public_field_name] = $group_id;
    }
  }

  // The quick post debugger.
  // In order to activate the debug: "drush vset c4m_quick_post_debug 1".
  $c4m_quick_post_debug = variable_get('c4m_quick_post_debug');

  // URL options.
  $options = array(
    'purl' => array(
      'disabled' => TRUE,
    ),
    'absolute' => TRUE,
  );

  // Pass info via Drupal.settings.
  $settings['c4m'] = array(
    'basePath' => url('', $options),
    'csrfToken' => drupal_get_token(\RestfulInterface::TOKEN_VALUE),
    'resources' => $show_resources,
    'field_schema' => $field_schema,
    'debug' => $c4m_quick_post_debug,
    'data' => array(
      'entity' => $entity_fields,
      'node' => $node,
    ),
  );
  drupal_add_js($settings, 'setting');

  // Theme function adds the Quick post form.
  return theme('c4m_restful_quick_post_angular_form', array('show_resources' => $show_resources));
}
