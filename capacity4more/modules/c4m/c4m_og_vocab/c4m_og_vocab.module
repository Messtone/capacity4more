<?php
/**
 * @file
 *
 * Module to support automatically created group vocabularies.
 *
 * This module is the glue between the og_vocab module and the capacity4more
 * distribution.
 */


define ('C4M_OG_VOCAB_INFO_VOCABULARIES', 'vocabularies');
define ('C4M_OG_VOCAB_INFO_GROUPS', 'groups');
define ('C4M_OG_VOCAB_INFO_CONTENT', 'content');


/**
 * Implements hook_node_insert().
 *
 * Automatically adds the Category taxonomy to a newly created group.
 * It uses the information collected trough the implemented
 * hook_c4m_og_vocab_info_groups() hooks to know what vocabularies to create per
 * group node type.
 *
 * It will use the information collected trough the implemented
 * hook_c4m_og_vocab_info_content() hooks to know for what group content types
 * to enable the vocabularies.
 */
function c4m_og_vocab_node_insert($node) {
  // Only for OG enabled content type.
  if (!og_is_group_type('node', $node->type)) {
    return;
  }

  // Run the code to create all the vocabularies
  // and link it with the content types.
  module_load_include('inc', 'c4m_og_vocab');
  c4m_og_vocab_trigger_create_group_categories($node);
}


/**
 * Load and cache all vocabularies info from implemented info_vocabulary hooks.
 *
 * @param string $part
 *   The part of the info we need. Following parts are supported:
 *   - vocabularies : Get all the Vocabulary types.
 *   - groups : Get the Vocabulary names per Group type.
 *   - content : Get the Vocabulary names per Group content type.
 * @param bool $reset
 *   Reset the cache, this will reload the config from the hooks.
 *
 * @return array
 */
function c4m_og_vocab_info($part, $reset = FALSE) {
  $cache_key  = 'c4m_og_auto_vocab:info_' . $part;

  // Cache in memory for multiple loads in 1 script.
  if ($reset) {
    drupal_static_reset($cache_key);
  }
  $info = &drupal_static($cache_key);

  // Retrieve from Cache if not loaded before.
  if (!isset($info)) {
    if (!$reset
      && ($cache = cache_get($cache_key))
      && !empty($cache->data)
    ) {
      $info = $cache->data;
    }
    else {
      $hook = 'c4m_og_vocab_info_' . $part;
      $info = module_invoke_all($hook);
      cache_set($cache_key, $info);
    }
  }

  return $info;
}

