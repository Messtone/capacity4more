<?php
/**
 * @file
 * c4m_content_event.features.field_instance.inc
 */

/**
 * Implements hook_field_default_field_instances().
 */
function c4m_content_event_field_default_field_instances() {
  $field_instances = array();

  // Exported field_instance: 'node-event-c4m_body'
  $field_instances['node-event-c4m_body'] = array(
    'bundle' => 'event',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 3,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'c4m_body',
    'label' => 'Description',
    'required' => 1,
    'settings' => array(
      'display_summary' => 0,
      'text_processing' => 1,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'rows' => 20,
        'summary_display' => 'default',
        'summary_rows' => 5,
      ),
      'type' => 'text_textarea_with_summary',
      'weight' => 2,
    ),
  );

  // Exported field_instance: 'node-event-c4m_datetime_end'
  $field_instances['node-event-c4m_datetime_end'] = array(
    'bundle' => 'event',
    'deleted' => 0,
    'description' => 'Start and end date of the Event.',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'date',
        'settings' => array(
          'format_type' => 'long',
          'fromto' => 'both',
          'multiple_from' => '',
          'multiple_number' => '',
          'multiple_to' => '',
        ),
        'type' => 'date_default',
        'weight' => 5,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'c4m_datetime_end',
    'label' => 'Date',
    'required' => 1,
    'settings' => array(
      'default_value' => 'now',
      'default_value2' => 'same',
      'default_value_code' => '',
      'default_value_code2' => '',
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'date',
      'settings' => array(
        'increment' => 15,
        'input_format' => 'd/m/Y - H:i:s',
        'input_format_custom' => '',
        'label_position' => 'above',
        'text_parts' => array(),
        'year_range' => '-3:+3',
      ),
      'type' => 'date_popup',
      'weight' => 4,
    ),
  );

  // Exported field_instance: 'node-event-c4m_event_type'
  $field_instances['node-event-c4m_event_type'] = array(
    'bundle' => 'event',
    'default_value' => array(
      0 => array(
        'value' => 'event',
      ),
    ),
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'list',
        'settings' => array(),
        'type' => 'list_default',
        'weight' => 10,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'c4m_event_type',
    'label' => 'Type of Event',
    'required' => 1,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(),
      'type' => 'options_buttons',
      'weight' => 1,
    ),
  );

  // Exported field_instance: 'node-event-c4m_location'
  $field_instances['node-event-c4m_location'] = array(
    'bundle' => 'event',
    'default_value' => array(
      0 => array(
        'address' => '',
        'name' => '',
        'street' => '',
        'additional' => '',
        'city' => '',
        'province' => '',
        'postal_code' => '',
        'country' => 'BE',
        'phone' => '',
        'mobile' => '',
        'fax' => '',
        'latitude' => '',
        'longitude' => '',
        'marker' => '',
        'sv_enable' => 0,
        'sv_showfirst' => 0,
        'mapzoom' => '',
        'map_maptype' => 'Map',
        'sv_heading' => '',
        'sv_zoom' => '',
        'sv_pitch' => '',
        'active' => FALSE,
        'settings' => array(
          'autocomplete_bias' => 0,
          'baselayers' => array(
            'Hybrid' => 0,
            'Map' => 1,
            'OpenStreetMap' => 0,
            'Physical' => 0,
            'Satellite' => 0,
          ),
          'circles_apply' => 0,
          'circles_clickable' => 0,
          'circles_coords' => '',
          'circles_enable' => 0,
          'circles_fillcolor' => '#FF0000',
          'circles_fillopacity' => 0.35,
          'circles_message' => '',
          'circles_radius' => 0,
          'circles_strokecolor' => '#FF0000',
          'circles_strokeopacity' => 0.8,
          'circles_strokeweight' => 3,
          'city_autocomplete' => 0,
          'comment_map_marker' => 'small red',
          'controltype' => 'small',
          'country' => 'BE',
          'draggable' => 1,
          'fullscreen' => 0,
          'fullscreen_controlposition' => '',
          'geojson_data' => '',
          'geojson_enable' => 0,
          'geojson_options' => '',
          'getdirections_link' => 0,
          'highlight_enable' => 0,
          'highlight_fillcolor' => '#FF0000',
          'highlight_fillopacity' => 0.35,
          'highlight_radius' => 10,
          'highlight_strokecolor' => '#FF0000',
          'highlight_strokeopacity' => 0.8,
          'highlight_strokeweight' => 3,
          'input_additional_required' => 0,
          'input_additional_weight' => 0,
          'input_additional_width' => 40,
          'input_address_width' => 40,
          'input_city_required' => 0,
          'input_city_weight' => 0,
          'input_city_width' => 40,
          'input_clear_button_weight' => 0,
          'input_country_required' => 0,
          'input_country_weight' => 0,
          'input_country_width' => 40,
          'input_fax_required' => 4,
          'input_fax_weight' => 0,
          'input_fax_width' => 20,
          'input_geobutton_weight' => 0,
          'input_geolocation_button_weight' => 0,
          'input_latitude_weight' => 0,
          'input_latitude_width' => 20,
          'input_longitude_weight' => 0,
          'input_longitude_width' => 20,
          'input_map_marker' => 'small red',
          'input_map_show' => 1,
          'input_map_weight' => 0,
          'input_marker_weight' => 0,
          'input_mobile_required' => 4,
          'input_mobile_weight' => 0,
          'input_mobile_width' => 20,
          'input_name_required' => 0,
          'input_name_weight' => 0,
          'input_name_width' => 40,
          'input_phone_required' => 4,
          'input_phone_weight' => 0,
          'input_phone_width' => 20,
          'input_postal_code_required' => 0,
          'input_postal_code_weight' => 0,
          'input_postal_code_width' => 40,
          'input_province_required' => 0,
          'input_province_weight' => 0,
          'input_province_width' => 40,
          'input_smart_ip_button_weight' => 0,
          'input_street_required' => 0,
          'input_street_weight' => 0,
          'input_street_width' => 40,
          'jquery_colorpicker_enabled' => 0,
          'kml_group' => array(
            'kml_url' => '',
            'kml_url_button' => 0,
            'kml_url_button_label' => 'Kml Layer',
            'kml_url_button_state' => 0,
            'kml_url_click' => 1,
            'kml_url_infowindow' => 0,
            'kml_url_viewport' => 1,
          ),
          'latlon_warning' => 0,
          'latlong' => '40,0',
          'map_backgroundcolor' => '',
          'map_marker' => 'small red',
          'map_settings_allow' => 0,
          'mapcontrolposition' => '',
          'mapheight' => '200px',
          'maptype' => 'Map',
          'mapwidth' => '300px',
          'maxzoom_map' => -1,
          'minzoom_map' => -1,
          'mtc' => 'standard',
          'node_map_marker' => 'small red',
          'nodoubleclickzoom' => 0,
          'nokeyboard' => 0,
          'only_continents' => '',
          'only_countries' => '',
          'overview' => 0,
          'overview_opened' => 0,
          'pancontrol' => 1,
          'pancontrolposition' => '',
          'per_item_marker' => 0,
          'polygons_clickable' => 0,
          'polygons_coords' => '',
          'polygons_enable' => 0,
          'polygons_fillcolor' => '#FF0000',
          'polygons_fillopacity' => 0.35,
          'polygons_message' => '',
          'polygons_strokecolor' => '#FF0000',
          'polygons_strokeopacity' => 0.8,
          'polygons_strokeweight' => 3,
          'polylines_clickable' => 0,
          'polylines_coords' => '',
          'polylines_enable' => 0,
          'polylines_message' => '',
          'polylines_strokecolor' => '#FF0000',
          'polylines_strokeopacity' => 0.8,
          'polylines_strokeweight' => 3,
          'province_autocomplete' => 0,
          'rectangles_apply' => 0,
          'rectangles_clickable' => 0,
          'rectangles_coords' => '',
          'rectangles_dist' => 0,
          'rectangles_enable' => 0,
          'rectangles_fillcolor' => '#FF0000',
          'rectangles_fillopacity' => 0.35,
          'rectangles_message' => '',
          'rectangles_strokecolor' => '#FF0000',
          'rectangles_strokeopacity' => 0.8,
          'rectangles_strokeweight' => 3,
          'restrict_by_country' => 0,
          'scale' => 0,
          'scalecontrolposition' => '',
          'scrollwheel' => 0,
          'search_country' => '',
          'search_places' => 0,
          'search_places_dd' => 0,
          'search_places_label' => 'Google Places Search',
          'search_places_list' => 0,
          'search_places_placeholder' => '',
          'search_places_position' => 'outside_above',
          'search_places_size' => 40,
          'show_bubble_on_one_marker' => 0,
          'show_maplinks' => 0,
          'street_num_pos' => 1,
          'streetview_settings_allow' => 0,
          'sv_addresscontrol' => 1,
          'sv_addresscontrolposition' => '',
          'sv_clicktogo' => 1,
          'sv_enable' => 0,
          'sv_heading' => 0,
          'sv_imagedatecontrol' => 0,
          'sv_linkscontrol' => 1,
          'sv_pancontrol' => 1,
          'sv_pancontrolposition' => '',
          'sv_pitch' => 0,
          'sv_scrollwheel' => 1,
          'sv_showfirst' => 0,
          'sv_zoom' => 1,
          'sv_zoomcontrol' => 'default',
          'sv_zoomcontrolposition' => '',
          'svcontrolposition' => '',
          'use_address' => 2,
          'use_clear_button' => 1,
          'use_country_dropdown' => 1,
          'use_geolocation_button' => 0,
          'use_smart_ip_button' => 0,
          'use_smart_ip_latlon' => 0,
          'user_map_marker' => 'small red',
          'vocabulary_map_marker' => 'small red',
          'zoom' => 3,
          'zoomcontrolposition' => '',
        ),
      ),
    ),
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'getlocations_fields',
        'settings' => array(
          'baselayers' => array(
            'Hybrid' => 1,
            'Map' => 1,
            'OpenStreetMap' => 0,
            'Physical' => 1,
            'Satellite' => 1,
          ),
          'bicycleinfo' => 0,
          'bicycleinfo_state' => 0,
          'circles_apply' => 0,
          'circles_clickable' => 0,
          'circles_coords' => '',
          'circles_enable' => 0,
          'circles_fillcolor' => '#FF0000',
          'circles_fillopacity' => 0.35,
          'circles_message' => '',
          'circles_radius' => 0,
          'circles_strokecolor' => '#FF0000',
          'circles_strokeopacity' => 0.8,
          'circles_strokeweight' => 3,
          'comment_map_marker' => 'drupal',
          'controltype' => 'small',
          'country_full' => 1,
          'display_additional' => 1,
          'display_city' => 1,
          'display_country' => 1,
          'display_dms' => 0,
          'display_fax' => 1,
          'display_geo_microformat' => 0,
          'display_latlong' => 1,
          'display_mapheight' => '200px',
          'display_maplink' => 1,
          'display_mapwidth' => '300px',
          'display_mobile' => 1,
          'display_name' => 1,
          'display_onemap' => 0,
          'display_phone' => 1,
          'display_postal_code' => 1,
          'display_province' => 1,
          'display_showmap' => 1,
          'display_street' => 1,
          'draggable' => 1,
          'fullscreen' => 0,
          'fullscreen_controlposition' => '',
          'geojson_data' => '',
          'geojson_enable' => 0,
          'geojson_options' => '',
          'getdirections_link' => 0,
          'gps_bubble' => 0,
          'gps_button' => 0,
          'gps_button_label' => '',
          'gps_center' => 0,
          'gps_geocode' => 0,
          'gps_marker' => '',
          'gps_marker_title' => '',
          'highlight_enable' => 0,
          'highlight_fillcolor' => '#FF0000',
          'highlight_fillopacity' => 0.35,
          'highlight_radius' => 10,
          'highlight_strokecolor' => '#FF0000',
          'highlight_strokeopacity' => 0.8,
          'highlight_strokeweight' => 3,
          'jquery_colorpicker_enabled' => 0,
          'kml_group' => array(
            'kml_url' => '',
            'kml_url_button' => 0,
            'kml_url_button_label' => 'Kml Layer',
            'kml_url_button_state' => 0,
            'kml_url_click' => 1,
            'kml_url_infowindow' => 0,
            'kml_url_viewport' => 1,
          ),
          'map_backgroundcolor' => '',
          'map_marker' => 'drupal',
          'mapcontrolposition' => '',
          'maptype' => 'Map',
          'markeraction' => 0,
          'markeractiontype' => 1,
          'maxzoom_map' => -1,
          'minzoom_map' => -1,
          'mtc' => 'standard',
          'node_map_marker' => 'drupal',
          'nodezoom' => 12,
          'nodoubleclickzoom' => 0,
          'nokeyboard' => 0,
          'overview' => 0,
          'overview_opened' => 0,
          'pancontrol' => 1,
          'pancontrolposition' => '',
          'panoramio_show' => 0,
          'panoramio_state' => 0,
          'panoramio_use' => 0,
          'per_item_marker' => 0,
          'poi_show' => 1,
          'polygons_clickable' => 0,
          'polygons_coords' => '',
          'polygons_enable' => 0,
          'polygons_fillcolor' => '#FF0000',
          'polygons_fillopacity' => 0.35,
          'polygons_message' => '',
          'polygons_strokecolor' => '#FF0000',
          'polygons_strokeopacity' => 0.8,
          'polygons_strokeweight' => 3,
          'polylines_clickable' => 0,
          'polylines_coords' => '',
          'polylines_enable' => 0,
          'polylines_message' => '',
          'polylines_strokecolor' => '#FF0000',
          'polylines_strokeopacity' => 0.8,
          'polylines_strokeweight' => 3,
          'rectangles_apply' => 0,
          'rectangles_clickable' => 0,
          'rectangles_coords' => '',
          'rectangles_dist' => 0,
          'rectangles_enable' => 0,
          'rectangles_fillcolor' => '#FF0000',
          'rectangles_fillopacity' => 0.35,
          'rectangles_message' => '',
          'rectangles_strokecolor' => '#FF0000',
          'rectangles_strokeopacity' => 0.8,
          'rectangles_strokeweight' => 3,
          'scale' => 0,
          'scalecontrolposition' => '',
          'scrollwheel' => 0,
          'search_places' => 0,
          'search_places_dd' => 0,
          'search_places_label' => 'Google Places Search',
          'search_places_list' => 0,
          'search_places_placeholder' => '',
          'search_places_position' => 'outside_above',
          'search_places_size' => 40,
          'show_bubble_on_one_marker' => 0,
          'show_maplinks' => 0,
          'sv_addresscontrol' => 1,
          'sv_addresscontrolposition' => '',
          'sv_clicktogo' => 1,
          'sv_heading' => 0,
          'sv_imagedatecontrol' => 0,
          'sv_linkscontrol' => 1,
          'sv_pancontrol' => 1,
          'sv_pancontrolposition' => '',
          'sv_pitch' => 0,
          'sv_scrollwheel' => 1,
          'sv_show' => 0,
          'sv_showfirst' => 0,
          'sv_zoom' => 1,
          'sv_zoomcontrol' => 'default',
          'sv_zoomcontrolposition' => '',
          'svcontrolposition' => '',
          'trafficinfo' => 0,
          'trafficinfo_state' => 0,
          'transit_show' => 1,
          'transitinfo' => 0,
          'transitinfo_state' => 0,
          'user_map_marker' => 'drupal',
          'vocabulary_map_marker' => 'drupal',
          'weather_cloud' => 1,
          'weather_cloud_state' => 0,
          'weather_show' => 0,
          'weather_state' => 0,
          'weather_use' => 0,
          'zoomcontrolposition' => '',
        ),
        'type' => 'getlocations_fields_default',
        'weight' => 4,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'c4m_location',
    'label' => 'Location',
    'required' => 0,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 0,
      'module' => 'getlocations_fields',
      'settings' => array(
        'city_autocomplete' => 0,
        'country' => '',
        'input_additional_required' => 0,
        'input_additional_weight' => 0,
        'input_additional_width' => 40,
        'input_address_width' => 40,
        'input_city_required' => 0,
        'input_city_weight' => 0,
        'input_city_width' => 40,
        'input_country_required' => 0,
        'input_country_weight' => 0,
        'input_country_width' => 40,
        'input_fax_required' => 0,
        'input_fax_weight' => 0,
        'input_fax_width' => 20,
        'input_latitude_weight' => 0,
        'input_latitude_width' => 20,
        'input_longitude_weight' => 0,
        'input_longitude_width' => 20,
        'input_mobile_required' => 0,
        'input_mobile_weight' => 0,
        'input_mobile_width' => 20,
        'input_name_required' => 0,
        'input_name_weight' => 0,
        'input_name_width' => 40,
        'input_phone_required' => 0,
        'input_phone_weight' => 0,
        'input_phone_width' => 20,
        'input_postal_code_required' => 0,
        'input_postal_code_weight' => 0,
        'input_postal_code_width' => 40,
        'input_province_required' => 0,
        'input_province_weight' => 0,
        'input_province_width' => 40,
        'input_street_required' => 0,
        'input_street_weight' => 0,
        'input_street_width' => 40,
        'per_item_marker' => 0,
        'province_autocomplete' => 0,
        'sv_enable' => 0,
        'sv_showfirst' => 0,
        'use_address' => 1,
        'use_country_dropdown' => 1,
      ),
      'type' => 'getlocations_fields',
      'weight' => 5,
    ),
  );

  // Exported field_instance: 'node-event-c4m_organised_by'
  $field_instances['node-event-c4m_organised_by'] = array(
    'bundle' => 'event',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => 'Name of the person or organisation who organises the Event.',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 2,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'c4m_organised_by',
    'label' => 'Organised by',
    'required' => 0,
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'size' => 60,
      ),
      'type' => 'text_textfield',
      'weight' => 3,
    ),
  );

  // Exported field_instance: 'node-event-c4m_related_document'
  $field_instances['node-event-c4m_related_document'] = array(
    'bundle' => 'event',
    'default_value' => NULL,
    'default_value_function' => '',
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'entityreference',
        'settings' => array(
          'link' => 1,
        ),
        'type' => 'entityreference_label',
        'weight' => 7,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'c4m_related_document',
    'label' => 'Documents',
    'required' => 0,
    'settings' => array(
      'behaviors' => array(
        'prepopulate' => array(
          'status' => 0,
        ),
      ),
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'entityreference',
      'settings' => array(
        'match_operator' => 'CONTAINS',
        'path' => '',
        'size' => 60,
      ),
      'type' => 'entityreference_autocomplete',
      'weight' => 6,
    ),
  );

  // Exported field_instance: 'node-event-c4m_vocab_date'
  $field_instances['node-event-c4m_vocab_date'] = array(
    'bundle' => 'event',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'taxonomy',
        'settings' => array(),
        'type' => 'taxonomy_term_reference_link',
        'weight' => 8,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'c4m_vocab_date',
    'label' => 'Date',
    'required' => 0,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(),
      'type' => 'options_select',
      'weight' => 9,
    ),
  );

  // Exported field_instance: 'node-event-c4m_vocab_language'
  $field_instances['node-event-c4m_vocab_language'] = array(
    'bundle' => 'event',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'taxonomy',
        'settings' => array(),
        'type' => 'taxonomy_term_reference_link',
        'weight' => 9,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'c4m_vocab_language',
    'label' => 'Language',
    'required' => 0,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(),
      'type' => 'options_select',
      'weight' => 10,
    ),
  );

  // Exported field_instance: 'node-event-og_group_ref'
  $field_instances['node-event-og_group_ref'] = array(
    'bundle' => 'event',
    'default_value' => NULL,
    'default_value_function' => '',
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'og_ui',
        'settings' => array(),
        'type' => 'og_list_default',
        'weight' => 0,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'og_group_ref',
    'label' => 'Groups',
    'required' => 0,
    'settings' => array(
      'behaviors' => array(
        'og_widget' => array(
          'admin' => array(
            'widget_type' => 'entityreference_autocomplete',
          ),
          'default' => array(
            'widget_type' => 'options_select',
          ),
          'status' => TRUE,
        ),
        'prepopulate' => array(
          'status' => 0,
        ),
      ),
      'user_register_form' => FALSE,
    ),
    'view modes' => array(
      'full' => array(
        'custom settings' => FALSE,
        'label' => 'Full',
        'type' => 'og_list_default',
      ),
      'teaser' => array(
        'custom settings' => FALSE,
        'label' => 'Teaser',
        'type' => 'og_list_default',
      ),
    ),
    'widget' => array(
      'active' => 0,
      'module' => 'og',
      'settings' => array(),
      'type' => 'og_complex',
      'weight' => 5,
    ),
  );

  // Exported field_instance: 'node-event-og_vocabulary'
  $field_instances['node-event-og_vocabulary'] = array(
    'bundle' => 'event',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'module' => 'og_vocab',
        'settings' => array(
          'concatenate' => FALSE,
        ),
        'type' => 'og_vocab',
        'weight' => 6,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'og_vocabulary',
    'label' => 'Metadata',
    'required' => FALSE,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'module' => 'c4m_og_vocab',
      'settings' => array(),
      'type' => 'og_vocab_complex',
      'weight' => 6,
    ),
  );

  // Translatables
  // Included for use with string extractors like potx.
  t('Date');
  t('Description');
  t('Documents');
  t('Groups');
  t('Language');
  t('Location');
  t('Metadata');
  t('Name of the person or organisation who organises the Event.');
  t('Organised by');
  t('Start and end date of the Event.');
  t('Type of Event');

  return $field_instances;
}
