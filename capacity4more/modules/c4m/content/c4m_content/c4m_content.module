<?php
/**
 * @file
 * Code for the Article content type feature.
 */


/**
 * Implements hook_form_FORM_ID_alter().
 * 
 * Add a cancel button to all node forms.
 */
function c4m_content_form_node_form_alter(&$form, &$form_state, $form_id) {
  // Check if a cancel button should be added to node forms.
  $cancel = variable_get('c4m_content_cancel_button', FALSE);
  if (!$cancel) {
    return;
  }

  // Use destination parameter when set.
  $params = drupal_get_query_parameters();
  if (empty($params['destination'])) {
    // Use javascript history.go(-1) when destination is not set.
    $form['actions']['cancel'] = array(
      '#type'   => 'button',
      '#value'  => t('Cancel'),
      '#attributes' => array('onClick' => 'history.go(-1); return true;'),
      '#weight' => 14,
    );
  }
  else {
    $form['actions']['cancel'] = array(
      '#type'   => 'submit',
      '#value'  => t('Cancel'),
      '#submit' => array('c4m_content_cancel_button_callback'),
      '#limit_validation_errors' => array(),
      '#weight' => 14,
    );
  }
}

/**
 * Cancel button callback when a destination parameter was set.
 */
function c4m_content_cancel_button_callback($form, &$form_state) {
  drupal_goto();
}

/**
 * Implements hook_block_info().
 */
function c4m_content_block_info() {
  $blocks['global_statistics_summary'] = array(
    'info' => t('Global website statistics'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['group_statistics_summary'] = array(
    'info' => t('Group statistics'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function c4m_content_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'global_statistics_summary':
      $statistics = c4m_content_get_website_statistics('global');
      $stats_summary =  array(
        '#theme'  => 'c4m_website_statistics_summary',
        '#data'   => $statistics,
      );
      $block['content'] = render($stats_summary);
      break;
    case 'group_statistics_summary':
      $statistics = c4m_content_get_website_statistics('group');
      $stats_summary =  array(
        '#theme'  => 'c4m_website_statistics_summary',
        '#data'   => $statistics,
      );
      $block['content'] = render($stats_summary);
      break;
  }
  return $block;
}

/**
 * Get global or per group website statistics data.
 * @param string $scope
 * @return array
 */
function c4m_content_get_website_statistics($scope = 'global') {
  $data =array();

  $hook = 'c4m_content_statistics';
  $stat_lists = module_invoke_all($hook);
  uasort($stat_lists, 'drupal_sort_weight');

  foreach ($stat_lists as $key => $list) {
    // Skip loop when the scopes doesn't match.
    if ($list['scope'] !== $scope) {
      continue;
    }

    // Skip loop when og feature isn't enabled
    if ($scope === 'group') {
      if (isset($list['feature_name'])
        && !is_null($list['feature_name'])
        && !c4m_og_feature_enabled($list['feature_name'])) {
        continue;
      }
    }

    $type = isset($list['aggregate']['type']) ? $list['aggregate']['type']
                                              : $list['type'];
    $arguments = array(
      'entity_type' => $list['entity_type'],
      'bundles'     => $list['bundles'],
      'state'       => $list['state'],
      'og_id'       => $list['og_id'],
      'c4m_status'  => isset($list['c4m_status']) ? $list['c4m_status'] : NULL,
    );

    $count = isset($data[$type]['count']) ? $data[$type]['count'] : 0;

    $data[$type] = array(
      'title'       => array(
        'singular' => $list['singular'],
        'plural' => $list['plural'],
      ),
      'count'       => $count + c4m_helper_entity_get_number_of_entities($arguments),
      'attributes'  => $list['attributes'],
    );
  }
  return $data;
}

/**
 * Implements hook_theme().
 */
function c4m_content_theme() {
  $theme['c4m_website_statistics_summary'] = array(
    'variables' => array(
      'data' => NULL,
    ),
    'file'  => 'c4m_content.theme.inc',
    'path'  => drupal_get_path('module', 'c4m_content') . '/includes',
  );

  return $theme;
}