<?php
/**
 * @file
 * Code for the Group content type feature.
 */

include_once 'c4m_content_group.features.inc';

/**
 * Implements hook_c4m_og_vocab_info_groups().
 *
 * @return array
 */
function c4m_content_group_c4m_og_vocab_info_groups() {
  return array(
    'group' => array(
      'c4m_vocab_category',
      'c4m_vocab_tag',
    ),
  );
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function c4m_content_group_ctools_plugin_directory($module, $plugin_type) {
  if ($module == 'ctools' && $plugin_type == 'content_types') {
    return 'plugins/' . $plugin_type;
  }
}

/**
 * Implements hook_block_info().
 */
function c4m_content_group_block_info() {
  $blocks['header_name_banner'] = array(
    'info' => t('Group header'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  return $blocks;
}

/**
 * Implements hook_entity_insert().
 *
 * Sends notifications (By email) to site administrators to notify
 * about a new group request.
 */
function c4m_content_group_node_insert($node) {
  // Only for OG enabled content type.
  if (!og_is_group_type('node', $node->type)) {
    return;
  }

  // Get all site administrators.
  $admin_role = user_role_load_by_name('administrator');
  $results = db_select('users_roles', 'r')
            ->fields('r', array('uid'))
            ->condition('rid', $admin_role->rid, '=')
            ->execute()
            ->fetchAll();

  // Send a notification for each site admin.
  if (!empty($results)) {
    foreach ($results as $result) {
      $admin = user_load($result->uid);
      $user = user_load($node->uid);

      $to = $admin->mail;
      $from = variable_get('site_mail', ini_get('sendmail_from'));
      $language = language_default();

      $module = 'c4m_og';
      $key = 'group_pending_approval_admin';
      $params = array(
        '@url' => url('node/' . $node->nid, array('absolute' => TRUE)),
        '@title' => $node->title,
        '@user' => $user->name,
      );
      drupal_mail($module, $key, $to, $language, $params, $from);
    }
  }
}

/**
 * Implements hook_node_update().
 *
 * Sends notifications (By email) to the group author,
 * when the group status changes (Rejected/ Approved).
 */
function c4m_content_group_node_update($node) {
  // Only for OG enabled content type.
  if (!og_is_group_type('node', $node->type)) {
    return;
  }

  $original_node = $node->original;

  $status = $node->c4m_og_status[LANGUAGE_NONE][0]['value'];

  if ($status == $original_node->c4m_og_status[LANGUAGE_NONE][0]['value']) {
    return;
  }

  switch ($status) {
    case 'rejected':
      $key = 'group_rejected_user';
      break;
    case 'published':
      $key = 'group_approved_user';
      break;
    default:
      $key = NULL;
      break;
  }

  // Send mail only if there's a key.
  if ($key) {
    $user = user_load($node->uid);

    $to = $user->mail;
    $from = variable_get('site_mail', ini_get('sendmail_from'));
    $language = language_default();

    $module = 'c4m_og';
    $params = array(
      '@url' => url('node/' . $node->nid, array('absolute' => TRUE)),
      '@title' => $node->title,
      '@user' => $user->name,
    );
    drupal_mail($module, $key, $to, $language, $params, $from);
  }
}

/**
 * Implements hook_block_view().
 */
function c4m_content_group_block_view($delta = '') {
  module_load_include('inc', 'c4m_content_group', 'c4m_content_group.block');
  $callback = '_c4m_content_group_block_' . $delta;
  if (!function_exists($callback)) {
    return NULL;
  }

  return $callback();
}

/**
 * Preprocess for blocks of this module.
 *
 * @param $variables
 */
function c4m_content_group_preprocess_block(&$variables) {
  module_load_include('inc', 'c4m_content_group', 'c4m_content_group.block');
  if ($variables['block']->module == 'c4m_content_group' &&
      !empty($variables['block']->delta)) {
    $callback = '_c4m_content_group_preprocess_' . $variables['block']->delta;
    if (function_exists($callback)) {
      $callback($variables);
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Hide fields for authenticated users and set submit function.
 */
function c4m_content_group_form_group_node_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  if ($user->uid && !user_access('administer nodes', $user)
    && strpos($form['#action'], 'add')) {
    // Hide fields for authenticated users.
    $form['c4m_related_group']['#access'] = FALSE;
    $form['c4m_related_projects']['#access'] = FALSE;
    $form['revision_information']['#access'] = FALSE;
    // After a form is submitted, run a redirect function.
    $form['actions']['submit']['#submit'][] = 'c4m_content_group_submit_redirect';
  }
}

/**
 * Submit form function.
 *
 * Set redirect and successful message.
 *
 * @param $form
 * @param $form_state
 */
function c4m_content_group_submit_redirect(&$form, &$form_state) {
  // Set a successful message for a user.
  drupal_set_message(t('The group you requested is pending review by one of the administrators. You will receive an email with the outcome of that review.'));
  // Redirect a user to homepage.
  $form_state['redirect'] = url('', array('absolute' => TRUE));
}
