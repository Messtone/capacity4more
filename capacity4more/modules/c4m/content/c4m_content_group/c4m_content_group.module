<?php
/**
 * @file
 * Code for the Group content type feature.
 */

include_once 'c4m_content_group.features.inc';

/**
 * Implements hook_c4m_og_vocab_info_groups().
 *
 * @return array
 */
function c4m_content_group_c4m_og_vocab_info_groups() {
  return array(
    'group' => array(
      'c4m_vocab_category',
      'c4m_vocab_tag',
    ),
  );
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function c4m_content_group_ctools_plugin_directory($module, $plugin_type) {
  if ($module == 'ctools' && $plugin_type == 'content_types') {
    return 'plugins/' . $plugin_type;
  }
}

/**
 * Implements hook_block_info().
 */
function c4m_content_group_block_info() {
  $blocks['header_name_banner'] = array(
    'info' => t('Group header'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function c4m_content_group_block_view($delta = '') {
  module_load_include('inc', 'c4m_content_group', 'c4m_content_group.block');
  $callback = '_c4m_content_group_block_' . $delta;
  if (!function_exists($callback)) {
    return NULL;
  }

  return $callback();
}

/**
 * Preprocess for blocks of this module.
 *
 * @param $variables
 */
function c4m_content_group_preprocess_block(&$variables) {
  module_load_include('inc', 'c4m_content_group', 'c4m_content_group.block');
  if ($variables['block']->module == 'c4m_content_group' &&
      !empty($variables['block']->delta)) {
    $callback = '_c4m_content_group_preprocess_' . $variables['block']->delta;
    if (function_exists($callback)) {
      $callback($variables);
    }
  }
}

/**
 * Helper function to render group details.
 * @return string
 */
function c4m_content_group_c4m_suggested_groups_get_groups() {
  global $user;

  $account = user_load($user->uid);
  $user_wrapper = entity_metadata_wrapper('user', $account);
  $interests = $user_wrapper->c4m_related_topic->raw();

  $groups = '';


  $query = new EntityFieldQuery();

  $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'group')
    ->propertyCondition('status', NODE_PUBLISHED);
  if (!empty($interests)) {
    $query->fieldCondition('c4m_related_topic', 'target_id', $interests, 'IN');
  }
  $result = $query
    ->addTag('random')
    ->range(0, 3)
    ->execute();

  if (!empty($result['node'])) {
    foreach ($result['node'] as $group) {
      $node_view = node_view(node_load($group->nid), 'teaser');
      $groups .= drupal_render($node_view);
    }
  }

  return $groups;
}

/**
 * Implementation of hook_query_TAG_alter
 */
function c4m_content_group_query_random_alter($query) {
  $query->orderRandom();
}
