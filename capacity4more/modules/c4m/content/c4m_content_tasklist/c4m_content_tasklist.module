<?php
/**
 * @file
 * Code for the Task List content type feature.
 */

include_once 'c4m_content_tasklist.features.inc';

/**
 * Implements hook_c4m_og_vocab_info_content().
 *
 * @return array
 */
function c4m_content_tasklist_c4m_og_vocab_info_content() {
  return array(
    'tasklist' => array(
      'entity_type' => 'node',
      'bundle' => 'tasklist',
      'vocabularies' => array(
        'c4m_vocab_category',
        'c4m_vocab_tag'
      ),
    ),
  );
}

/**
 * Implements hook_c4m_content_statistics().
 */
function c4m_content_tasklist_c4m_content_statistics() {
  $group = og_context();
  $og_id = $group['gid'];

  return array(
    'c4m_tasklists' => array(
      'type'          => 'tasklist',
      'entity_type'   => 'node',
      'bundles'       => array('tasklist'),
      'singular'      => 'Post',
      'plural'        => 'Posts',
      'state'         => 1,
      'scope'         => 'global',
      'og_id'         => NULL,
      'aggregate'     => array(
        'type' => 'posts',
      ),
      'weight'        => 1,
      'attributes'    => array(
        'class' => array('posts'),
      )
    ),
    'c4m_og_tasklists' => array(
      'type'          => 'tasklist',
      'entity_type'   => 'node',
      'bundles'       => array('tasklist'),
      'singular'      => 'Task list',
      'plural'        => 'Task lists',
      'state'         => 1,
      'scope'         => 'group',
      'og_id'         => $og_id,
      'aggregate'     => array(),
      'weight'        => 4,
      'feature_name'  => 'c4m_features_og_tasklists',
      'attributes'    => array(
        'class' => array('og-tasklists'),
      )
    ),
  );
}
