<?php
/**
 * @file
 */

/**
 * Implements hook_field_widget_info().
 */
function c4m_vocab_og_widget_field_widget_info() {
  $widgets['c4m_og_widget'] = array(
    'label' => t('C4M OG vocab widget'),
    'description' => t('OG vocab widget using AngularJs.'),
    'field types' => array('entityreference'),
    'behaviors' => array(
      'multiple values' => FIELD_BEHAVIOR_DEFAULT,
    ),
  );

  return $widgets;
}

/**
 * Implements hook_field_widget_form().
 */
function c4m_vocab_og_widget_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
//  $context = og_context();
//
//  if (empty($context['gid'])) {
//    $element['no_group_context'] = array(
//      '#type' => 'markup',
//      '#markup' => t('There is no group context available. Please save your group content first and then edit it.'),
//      '#prefix' => '<span class="description">',
//      '#suffix' => '</span>',
//    );
//    return $element;
//  }
//
//  $group = node_load($context['gid']);
//  $all_group_vocabularies = c4m_og_vocab_info('groups');
//
//  // Getting the categories vocab.
//  $terms = array();
//  foreach(taxonomy_vocabulary_get_names() as $vocab) {
//    if (in_array($vocab->vid, $accessible_vocabs)) {
//      if ($vocab->name == 'Categories') {
//        $terms = taxonomy_get_tree($vocab->vid);
//      }
//    }
//  }
//
//  $options = array();
//  foreach($terms as $term) {
//    $parents = $term->parents;
//    if ($parents[0] == '0') {
//      $options[$term->tid]['label'] = check_plain($term->name);
//      $options[$term->tid]['id'] = $term->tid;
//    }
//    else {
//      $options[$parents[0]]['children'][] = array(
//        'label' => check_plain($term->name),
//        'id' => $term->tid,
//      );
//    }
//  }
//  $settings['c4m']['data']['vocabularies']['categories'] = $options;
//
//  // URL options.
//  $options = array(
//    'purl' => array(
//      'disabled' => TRUE,
//    ),
//    'absolute' => TRUE,
//  );
//
//  $settings['c4m']['basePath'] = url('', $options);
//
//  $settings['c4m']['data']['group'] = $group_id;
//
//  drupal_add_js($settings, 'setting');

  // Add the directive.
  //$directives = theme('c4m_vocab_language_taxonomy_widget', array('vocabulary_name' => 'categories')).theme('c4m_vocab_og_widget', array());

//  $form['directive-tags'] = array(
//    '#markup' => $directives,
//    '#weight' => $instance['widget']['weight'],
//  );
  //$form['#attributes']['ng-controller'] = 'DrupalFormCtrl';
  //$form['#attributes']['class'][] = 'drupal-form';

  // Using default widget, that will be hidden.
  $element = c4m_og_vocab_field_widget_form($form, $form_state, $field, $instance, $langcode, $items, $delta, $element);
//  $element['#prefix'] = '<div class="ng-hide">';
//  $element['#suffix'] = '</div>';

  return $element;
}

/**
 * Implements hook_theme().
 */
function c4m_vocab_og_widget_theme() {
  $theme['c4m_vocab_og_widget'] = array(
    'template' => 'c4m_vocab_og_widget',
    'path' => drupal_get_path('module', 'c4m_vocab_og_widget') . '/templates',
    'variables' => array(),
  );

  return $theme;
}
