<?php
/**
 * @file
 * Drupal needs this blank file.
 */

/**
 * Implements hook_field_widget_info().
 */
function c4m_vocab_language_field_widget_info() {
  $widgets['c4m_taxonomy_reference'] = array(
    'label' => t('C4M Taxonomy'),
    'description' => t('Taxonomy widget using Angular.'),
    'field types' => array('entityreference', 'taxonomy_term_reference'),
    'behaviors' => array(
      'multiple values' => FIELD_BEHAVIOR_CUSTOM,
      'default value' => FIELD_BEHAVIOR_NONE,
    ),
  );

  return $widgets;
}

/**
 * Implements hook_field_widget_form().
 */
function c4m_vocab_language_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $entity_type = $instance['entity_type'];
  $entity = isset($element['#entity']) ? $element['#entity'] : NULL;

  if (!$entity) {
    return;
  }

  // Load Angular.
  $bower_path = libraries_get_path('bower_components');

  // AngularJs.
  $form['#attached']['js'][] = $bower_path . '/angular/angular.min.js';

  // Upload file library.
  $form['#attached']['js'][] = $bower_path . '/danialfarid-angular-file-upload/dist/angular-file-upload-shim.min.js';
  $form['#attached']['js'][] = $bower_path . '/danialfarid-angular-file-upload/dist/angular-file-upload.min.js';
  // Angular-animate.
  $form['#attached']['js'][] = $bower_path . '/angular-animate/angular-animate.min.js';

  // JSON pretty print library.
  $form['#attached']['css'][] = $bower_path . '/ng-prettyjson/dist/ng-prettyjson.min.css';
  $form['#attached']['js'][] = $bower_path . '/ng-prettyjson/dist/ng-prettyjson.min.js';

  // CKEditor library.
  $form['#attached']['css'][] = $bower_path . '/ng-ckeditor/ng-ckeditor.css';
  $form['#attached']['js'][] = $bower_path . '/ng-ckeditor/libs/ckeditor/ckeditor.js';
  $form['#attached']['js'][] = $bower_path . '/ng-ckeditor/ng-ckeditor.js';

  // Select UI
  $form['#attached']['css'][] = $bower_path . '/select2/select2.css';
  $form['#attached']['css'][] = $bower_path . '/select2/select2-bootstrap.css';
  $form['#attached']['js'][] = $bower_path . '/select2/select2.js';
  $form['#attached']['js'][] = $bower_path . '/angular-ui-select2/src/select2.js';

  // Bootstrap DatePicker.
  $form['#attached']['js'][] = $bower_path . '/angular-bootstrap/ui-bootstrap.min.js';
  $form['#attached']['js'][] = $bower_path . '/angular-bootstrap/ui-bootstrap-tpls.min.js';

  // Font-awesome library.
  $form['#attached']['css'][] = $bower_path . '/components-font-awesome/css/font-awesome.min.css';

  // Filesize library.
  $form['#attached']['js'][] = $bower_path . '/filesize/lib/filesize.min.js';

  // Load our custom app.
  $app_path = $bower_path . '/c4m-app/dist';
  $form['#attached']['js'][] = $app_path . '/c4m-app.js';
  $form['#attached']['css'][] = $app_path . '/css/c4m-app.css';

  // Get taxonomy vocabulary and sent it to the app.
  $vocabulary_name = $field['settings']['allowed_values'][0]['vocabulary'];
  $vocabulary = taxonomy_vocabulary_machine_name_load($field['settings']['allowed_values'][0]['vocabulary']);
  $terms = taxonomy_get_tree($vocabulary->vid);
  $options = array();
  foreach($terms as $term) {
    $options[$term->tid]['label'] = check_plain($term->name);
    $options[$term->tid]['id'] = $term->tid;
  }
  $settings['c4m']['data']['vocabularies'][$vocabulary_name] = $options;
  drupal_add_js($settings, 'setting');

  // Add the directive.
  $directive = theme('c4m_vocab_language_taxonomy_widget', array('vocabulary_name' => $vocabulary_name));
  $form['directive-' . $vocabulary_name] = array(
    '#markup' => $directive,
  );
  $form['#attributes']['ng-controller'] = 'DrupalFormCtrl';
  $form['#attributes']['class'][] = 'drupal-form';

  // Using default widget, that will be hidden.
  $instance['widget']['type'] = 'options_buttons';
  $instance['widget']['active'] = 1;
  $element = options_field_widget_form($form, $form_state, $field, $instance, $langcode, $items, $delta, $element);
  $element['#title'] = '';
  $element['#prefix'] = '<div class="ng-hide">';
  $element['#suffix'] = '</div>';

  return $element;
}

/**
 * Implements hook_theme().
 */
function c4m_vocab_language_theme() {
  $theme['c4m_vocab_language_taxonomy_widget'] = array(
    'template' => 'c4m_vocab_widget',
    'path' => drupal_get_path('module', 'c4m_vocab_language') . '/templates',
    'variables' => array(
      'vocabulary_name' => NULL,
    ),
  );

  return $theme;
}
