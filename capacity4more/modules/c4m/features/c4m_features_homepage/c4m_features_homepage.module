<?php
/**
 * @file
 * Code for the Homepage feature.
 */

include_once 'c4m_features_homepage.features.inc';

/**
 * Implements hook_ctools_plugin_directory().
 */

function c4m_features_homepage_ctools_plugin_directory($module, $plugin_type) {
  if ($module == 'ctools' && $plugin_type == 'content_types') {
    return 'plugins/' . $plugin_type;
  }
}


/**
 * Helper function to render group details.
 * @return string
 */
function c4m_features_homepage_c4m_suggested_groups_get_groups() {
  global $user;

  $user_wrapper = entity_metadata_wrapper('user', $user->uid);
  $interests = $user_wrapper->c4m_related_topic->raw();

  $filter = !empty($_GET['filter']) ? $_GET['filter'] : NULL;

  if ($filter == 'groups') {
    return;
  }

  $user_groups = og_get_groups_by_user();
  $groups = '';


  $query = new EntityFieldQuery();

  $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'group')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->propertyCondition('nid', $user_groups, 'NOT IN');

  if (!empty($interests)) {
    $query->fieldCondition('c4m_related_topic', 'target_id', $interests, 'IN');
  }

  $result = $query
    ->addTag('random')
    ->range(0, 3)
    ->execute();

  if (empty($result['node'])) {
    return;
  }
  foreach ($result['node'] as $group) {
    $node_view = node_view(node_load($group->nid), 'teaser');
    $groups .= drupal_render($node_view);
  }

  $groups .= l(t('see more'), 'groups');

  return $groups;
}

/**
 * Implementation of hook_query_TAG_alter
 */
function c4m_features_homepage_query_random_alter($query) {
  $query->orderRandom();
}
