@mixin grain {
  background: url('../images/grain.png');
}

@mixin grain_dark {
  background: url('../images/grain-dark.png');
}

@mixin grey_bar_base {
  background-color: $color-background;
  border-top: 1px solid $color-gray-light;
  border-bottom: 1px solid $color-gray-light;
}

@mixin grey_bar {
  @include grey_bar_base;
  padding: 2rem 0;
}

@mixin grey_box {
  @include grey_bar;
  border: 1px solid $color-gray-light;
  border-radius: 2px;
  padding: 1rem;
}

@mixin horizontal_menu {
  list-style: none;
  margin: 0;
  padding: 0;

  li {
    border-right: 1px solid $color-gray-light;
    float: left;
    line-height: 1rem;
    padding: 0 1rem;

    &.first {
      border-left: none;
      padding-left: 0;
    }
    &.last {
      border-right: none;
      padding-right: 0;
    }
  }
}

@mixin horizontal_menu_flex_100($margin: .25em 0, $padding: 0 1em) {
  @include horizontal_menu;

  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  margin: 0 -1px 0 0;
  width: 100%;

  li {
    flex-grow: 1;
    flex-basis: auto;
    margin: $margin;
    padding: $padding;
    text-align: center;
  }
}

@mixin looped_backgrounds($extensions, $background) {
  @each $extension in $extensions {
    &.as-document-#{$extension} {
      background: url($background) no-repeat center center;
    }
  }
}

@mixin image-overlay-bottom {
  background-color: $color-white;
  border: 1px solid $color-gray-light;
  border-radius: 5px;
  margin: 0 auto -2rem auto;
  padding: 1rem;
  position: relative;
  top: -3rem;
  width: 95%;

  p:last-child {
    margin-bottom: 0;
  }
}

@mixin dashed_separator($position: 'bottom') {
  border-#{$position}: 1px dashed $color-gray-light;
  margin-#{$position}: 1rem;
  padding-#{$position}: 1rem;
}

@mixin label_style {
  border: none;
  background: #eee;
  border-radius: 3px 0 0 3px;
  color: $color-gray-dark;
  display: inline-block;
  height: 26px;
  line-height: 26px;
  margin: 3px 0 3px 5px;
  padding: 0 20px 0 1em;
  position: relative;
  text-decoration: none;

  &:after {
    background: #fff;
    border-bottom: 13px solid transparent;
    border-left: 10px solid #eee;
    border-top: 13px solid transparent;
    content: '';
    font-style: normal;
    position: absolute;
    right: 0;
    top: 0;
  }
}

@mixin border-bottom {
  &:not(:last-child) {
    border-bottom: 1px dashed $color-gray-light;
    padding-bottom: 1.5em;
  }
  margin-bottom: 2em;
}

@mixin rotate_promote_flag {
  i {
    transform: rotate(0deg);
  }
}

@mixin hyphenate {
  overflow-wrap: break-word;
  word-wrap: break-word;
  -webkit-hyphens: auto;
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  hyphens: auto;
}

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
  @each $property in $properties {
    #{$property}: $min-value;
  }

  @media screen and (min-width: $min-vw) {
    @each $property in $properties {
      #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});
    }
  }

  @media screen and (min-width: $max-vw) {
    @each $property in $properties {
      #{$property}: $max-value;
    }
  }
}

// http://codepen.io/martinwolf/pen/qlFdp
@mixin ellipsis-cutoff($line-height, $lines) {
  display: block; /* Fallback for non-webkit */
  display: -webkit-box;
  max-width: 100%;
  height: $lines * $line-height * 1em; /* Fallback for non-webkit */
  margin: 0 auto;
  line-height: $line-height;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}
