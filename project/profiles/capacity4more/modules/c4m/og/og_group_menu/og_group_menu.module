<?php

/**
 * @file
 * Code for the OG group menu feature.
 */

include_once 'og_group_menu.features.inc';

/**
 * Implements hook_block_view_alter().
 */
function og_group_menu_block_view_alter(&$data, $block) {

  if (!property_exists($block, 'context') || $block->context != 'c4m_context_og_menu') {
    // Not the desired context.
    return;
  }

  // Alter the menu <ul> wrapper to add the styling classes.
  $data['content']['#theme_wrappers'][0] = 'menu_tree__og_group_menu';

  $item = menu_get_item();

  foreach ($data['content'] as &$value) {
    if (!isset($value['#attributes']['class'])) {
      // Not a menu item.
      continue;
    }

    // Add the styling classes to the nav <li> items.
    $value['#attributes']['class'][] = 'og-menu-link';
    $value['#attributes']['class'][] = str_replace('/', '', $value['#href']);
    if ($value['#title'] == 'Home') {
      // Group home link.
      $value['#attributes']['class'][] = 'front';
      if ($item['path'] == 'node') {
        $value['#attributes']['class'][] = 'active';
      }
    }
  }
}

/**
 * Implements hook_og_ui_get_group_admin_alter().
 *
 * Prevents editing group menus. Allow only for projects.
 */
function og_group_menu_og_ui_get_group_admin_alter(&$data, $context) {
  // If we are in a project context, keep the link in place.
  $group = node_load($context['etid']);
  if ($group && $group->type == 'project') {
    return;
  }

  unset($data['menus']);
}

/**
 * Implements hook_menu_alter().
 */
function og_group_menu_menu_alter(&$items) {
  $group = node_load(og_menu_get_context());
  if ($group && $group->type == 'project') {
    return;
  }

  $items['group/%/%/admin/menus']['access callback'] = FALSE;
}
