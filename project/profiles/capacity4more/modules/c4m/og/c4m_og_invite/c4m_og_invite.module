<?php

/**
 * @file
 * Code for og_invite and og_invite_people modules.
 */

/**
 * Implements hook_menu_alter().
 */
function c4m_og_invite_menu_alter(&$items) {
  $items['group/%/%/admin/people/invite']['access callback'] = 'c4m_og_invite_user_access_group';
  $items['group/%/%/admin/people/invite-users']['access callback'] = 'c4m_og_invite_access';
  $items['group/%/%/admin/people/invite-users/%user']['access callback'] = 'c4m_og_invite_access';
  $items['group/%/%/admin/people/invite-users/autocomplete']['access callback'] = 'c4m_og_invite_access';
}

/**
 * Invitation access callback.
 *
 * Deny access to invite users into the group if either _og_invite_access() or
 * c4m_og_invite_check_access_by_group_type() returns false.
 */
function c4m_og_invite_access($group_type, $gid) {
  if (_og_invite_access($group_type, $gid)) {
    return c4m_og_invite_check_access_by_group_type(NULL, $group_type, $gid);
  }

  return FALSE;
}

/**
 * Check if entity is a group, and user has permission - Access.
 *
 * Deny access to invite new people to the group if either
 * og_invite_people_user_access_group() or
 * c4m_og_invite_check_access_by_group_type() returns false.
 */
function c4m_og_invite_user_access_group($perm, $group_type, $gid) {
  if (og_invite_people_user_access_group($perm, $group_type, $gid)) {
    return c4m_og_invite_check_access_by_group_type($perm, $group_type, $gid);
  }

  return FALSE;
}

/**
 * Return true if the user is allowed to invite and false if he isn't.
 */
function c4m_og_invite_check_access_by_group_type($perm, $group_type, $gid) {
  if (user_access('administer site')) {
    return TRUE;
  }

  if (og_user_access($group_type, $gid, 'administrator member')) {
    return TRUE;
  }

  // Get request type (open/moderated).
  $group = entity_load_single($group_type, $gid);
  $group_request_membership_value = c4m_og_get_group_membership_request($group);

  return $group_request_membership_value == 'open' && og_user_access($group_type, $gid, 'member');
}
