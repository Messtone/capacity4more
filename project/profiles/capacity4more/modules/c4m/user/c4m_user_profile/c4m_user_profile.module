<?php
/**
 * @file
 * Code for the User Profile feature.
 */

include_once 'c4m_user_profile.features.inc';

/**
 * Implements hook_field_extra_fields_alter().
 */
function c4m_user_profile_field_extra_fields_alter(&$info) {
  // Make sure that the Account fields are always at the top of the user
  // profile.
  if (isset($info['user']['user']['form']['account']['weight'])) {
    $info['user']['user']['form']['account']['weight'] = -100;
  }
}

/******************************************************************************
 * BLOCK
 ******************************************************************************/

/**
 * Implements hook_block_info().
 */
function c4m_user_profile_block_info() {
  $blocks['user_welcome'] = array(
    'info' => t('Welcome the user in the top bar'),
    'cache' => DRUPAL_CACHE_PER_USER,
  );

  $blocks['user_notifications'] = array(
    'info' => t('Display the user notifications etc...'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function c4m_user_profile_block_view($delta = '') {
  $module_name = 'c4m_user_profile';
  module_load_include('inc', $module_name, "{$module_name}.block");
  $callback = "_{$module_name}_block_" . $delta;
  if (!function_exists($callback)) {
    return NULL;
  }

  return $callback();
}

/**
 * Implements hook_token_info().
 */
function c4m_user_profile_token_info() {
  $info['tokens']['user']['full-name'] = array(
    'name'        => t('User Full Name'),
    'description' => t('Returns the User Full Name)'),
  );
  $info['tokens']['user']['url-with-name'] = array(
    'name' => t("User profile URL with fallback for anonymous users"),
    'description' => t("The URL of the account profile page, with fallback if anonymous."),
  );

  return $info;
}

/**
 * Implements hook_tokens().
 */
function c4m_user_profile_tokens($type, $tokens, array $data = array(), array $options = array()) {
  $replacements = array();
  $url_options = array('absolute' => TRUE);

  if ($type == 'user' && !empty($data['user'])) {
    $account = $data['user'];
    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'full-name':
          $replacements[$original] = c4m_user_name($account);
          break;

        case 'url-with-name':
          $name = c4m_user_name($account);
          $replacements[$original] = !empty($account->uid) ? l(
            $name, "user/$account->uid", $url_options
          ) : $name;
          break;
      }
    }
  }

  return $replacements;
}

/**
 * Implements hook_facet_items_alter().
 */
function c4m_user_profile_facet_items_alter(&$build, &$settings) {
  switch ($settings->facet) {
    case 'c4m_country':
      _c4m_user_profile_facet_country_alter($build, $settings);
      break;
  }
}

/**
 * Helper function to alter the facet for the country.
 *
 * Display full country name instead of country code.
 *
 * @param array $build
 *    The facets.
 * @param object $settings
 *    Facet settings.
 */
function _c4m_user_profile_facet_country_alter(array &$build, $settings) {
  $field = field_info_field($settings->facet);
  $allowed_values = list_allowed_values($field);
  foreach ($build as $key => $item) {
    $options = array(
      '@country' => ucwords(
        drupal_strtolower($allowed_values[drupal_strtoupper($key)])
      ),
    );
    $build[$key]["#markup"] = t('@country', $options);
  }
}

/**
 * Implements hook_theme().
 */
function c4m_user_profile_theme() {
  $theme['c4m_user_profile_picture_fullname'] = array(
    'variables' => array(
      'user' => array(),
      'link' => array(),
    ),
    'file' => 'c4m_user_profile.theme.inc',
    'path' => drupal_get_path('module', 'c4m_user_profile') . '/includes',
  );

  $theme['c4m_user_profile_menu'] = array(
    'variables' => array(
      'menu_items'  => array(),
      'attributes'  => array(),
    ),
    'file' => 'c4m_user_profile.theme.inc',
    'path' => drupal_get_path('module', 'c4m_user_profile') . '/includes',
  );

  return $theme;
}

/**
 * Implements hook_module_implements_alter().
 *
 * Our implementation needs to fire after legal module.
 */
function c4m_user_profile_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter' && isset($implementations['c4m_user_profile'])) {
    $c4m_user_profile = $implementations['c4m_user_profile'];
    unset($implementations['c4m_user_profile']);
    $implementations['c4m_user_profile'] = $c4m_user_profile;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function c4m_user_profile_form_user_register_form_alter(&$form, &$form_state, $form_id) {
  // @see contact_form_user_profile_form_alter().
  $form['contact_info']['contact'] = array(
    '#type' => 'checkbox',
    '#title' => t('I allow C4Dev users to contact me directly by E-mail through the platform'),
    '#default_value' => variable_get('contact_default_status', 1),
    '#weight' => 20,
  );
  $form['contact_info']['#weight'] = 20;

  $form['actions']['cancel'] = array(
    '#type' => 'markup',
    '#markup' => l(t('Cancel'), '<front>', array('attributes' => array('class' => array('btn', 'btn-default')))),
  );

  $form['legal'] = $form['legal']['legal_accept'];
  $form['legal']['#type'] = 'markup';
  $form['legal']['#markup'] = '<p>' . $form['legal']['#title'] . '</p>';
}

/**
 * Implements hook_c4m_captcha_form_info().
 */
function c4m_user_profile_c4m_captcha_form_info() {
  return array('user_register_form');
}
