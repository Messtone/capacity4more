<?php

/**
 * @file
 * Install and update hooks for the c4m_message_digest module.
 */

/**
 * Implements hook_install().
 */
function c4m_message_digest_install() {
  c4m_message_digest_update_7001();
  c4m_message_digest_update_7002();
}

/**
 * Implements hook_update_N().
 */
function c4m_message_digest_update_7001() {
  variable_set('message_subscribe_default_notifiers', []);
}

/**
 * Implements hook_update_N().
 */
function c4m_message_digest_update_7002() {
  c4m_message_digest_update_subscribe_notify_messages();
}

/**
 * Implements hook_schema().
 */
function c4m_message_digest_schema() {
  $schema['message_digest_preferences'] = [
    'fields' => [
      'fid' => [
        'description' => 'The {flag}.fid of the stored preference.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'entity_type' => [
        'description' => "The entity type (e.g. node, comment, etc').",
        'type' => 'varchar',
        'length' => '32',
        'not null' => TRUE,
        'default' => '',
      ],
      'entity_id' => [
        'description' => 'The entity id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'uid' => [
        'description' => 'The {users}.uid of the user.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'preference' => [
        'description' => 'The machine name of the digest preference.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ],
    ],
    'indexes' => [
      'fid' => ['fid'],
      'entity_id' => ['entity_id'],
      'uid' => ['uid'],
    ],
    'foreign keys' => [
      'flag' => [
        'table' => 'file_managed',
        'columns' => ['fid' => 'fid'],
      ],
      'users' => [
        'table' => 'users',
        'columns' => ['uid' => 'uid'],
      ],
    ],
  ];

  return $schema;
}

/**
 * Re-import all the subscription notification message types as entities.
 */
function c4m_message_digest_update_subscribe_notify_messages() {
  module_load_include('inc', 'c4m_message', 'includes/c4m_message_entity_import');

  features_revert_module('c4m_message');

  $messages = _c4m_message_get_messages_subscribe_notifies();

  foreach ($messages as $message) {
    $entity = entity_import('message_type', $message);

    $existing_entity = message_type_load($entity->name);

    if (!$entity || !$existing_entity) {
      continue;
    }

    $existing_entity->message_text = $entity->message_text;
    $existing_entity->message_footer = $entity->message_footer;
    $existing_entity->message_header = $entity->message_header;

    $existing_entity->save();
  }

  features_revert_module('c4m_message');
}
